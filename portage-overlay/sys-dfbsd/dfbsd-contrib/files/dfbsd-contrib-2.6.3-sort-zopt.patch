diff --git a/gnu/usr.bin/sort/sort.c b/gnu/usr.bin/sort/sort.c
index f9d8d5e..691b98c 100644
--- a/gnu/usr.bin/sort/sort.c
+++ b/gnu/usr.bin/sort/sort.c
@@ -68,6 +68,9 @@ void free ();
 /* The kind of blanks for '-b' to skip in various options. */
 enum blanktype { bl_start, bl_end, bl_both };
 
+/* The character marking end of line. Default to \n. */
+static char eolchar = '\n';
+
 /* Lines are held in core as counted strings. */
 struct line
 {
@@ -265,6 +268,7 @@ Write sorted concatenation of all FILE(s) to standard output.\n\
   -t SEP           use SEParator instead of non- to whitespace transition\n\
   -u               with -c, check for strict ordering\n\
   -u               with -m, only output the first of an equal sequence\n\
+  -z               end lines with 0 byte, not newline\n\
       --help       display this help and exit\n\
       --version    output version information and exit\n\
 \n\
@@ -1653,7 +1657,7 @@ sort (char **files, int nfiles, FILE *ofp)
 		|| compare (&lines.lines[i], &lines.lines[i - 1]))
 	      {
 		xfwrite (lines.lines[i].text, 1, lines.lines[i].length, tfp);
-		putc ('\n', tfp);
+		putc (eolchar, tfp);
 	      }
 	  if (tfp != ofp)
 	    xfclose (tfp);
@@ -1758,6 +1762,9 @@ set_ordering (register const char *s, struct keyfield *key,
 	case 'r':
 	  key->reverse = 1;
 	  break;
+	case 'z':
+	  eolchar = 0;
+	  break;
 	default:
 	  return (char *) s;
 	}
