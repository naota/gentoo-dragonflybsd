commit 810b0be2b897579327b14fc599ba3024983237c7
Author: Naohiro Aota <naota@elisp.net>
Date:   Wed Jun 9 11:47:19 2010 +0900

    Additional errno check on non-Linux system.
    
    On most POSIX system, ERANGE is returned when Linux returns ENAMETOOLONG

diff --git a/sandbox-1.6/libsandbox/libsandbox.c b/sandbox-1.6/libsandbox/libsandbox.c
index e4afbe4..c295d59 100644
--- a/sandbox-1.6/libsandbox/libsandbox.c
+++ b/sandbox-1.6/libsandbox/libsandbox.c
@@ -148,7 +148,11 @@ int canonicalize(const char *path, char *resolved_path)
 		 * an absolute path
 		 */
 
+#ifndef __linux__
+		if (ENAMETOOLONG == errno || ERANGE == errno)
+#else
 		if (ENAMETOOLONG == errno)
+#endif
 			return -1;
 
 		if (NULL == egetcwd(resolved_path, SB_PATH_MAX - 2))
@@ -157,7 +161,11 @@ int canonicalize(const char *path, char *resolved_path)
 		snprintf(resolved_path + len, SB_PATH_MAX - len, "/%s", path);
 
 		if (NULL == erealpath(resolved_path, resolved_path)) {
+#ifndef __linux__
+			if (errno == ENAMETOOLONG || errno == ERANGE) {
+#else
 			if (errno == ENAMETOOLONG) {
+#endif
 				/* The resolved path is too long for the buffer to hold */
 				return -1;
 			} else {
