diff --git a/osdep-freebsd.c b/osdep-freebsd.c
index ddd865e..932ea19 100644
--- a/osdep-freebsd.c
+++ b/osdep-freebsd.c
@@ -17,7 +17,11 @@
  */
 
 #include <sys/param.h>
-#include <sys/proc.h>
+#ifdef __DragonFly__
+# include <sys/user.h>
+#else
+# include <sys/proc.h>
+#endif
 #include <sys/stat.h>
 #include <sys/sysctl.h>
 #include <sys/user.h>
@@ -36,10 +40,17 @@ char			*osdep_get_name(int, char *);
 #define nitems(_a) (sizeof((_a)) / sizeof((_a)[0]))
 #endif
 
-#define is_runnable(p) \
+#ifdef __DragonFly__
+# define is_runnable(p) \
+	((p)->kp_stat == SACTIVE || (p)->kp_stat == SIDL)
+# define is_stopped(p) \
+	((p)->kp_stat == SSTOP || (p)->kp_stat == SZOMB)
+#else
+# define is_runnable(p) \
 	((p)->ki_stat == SRUN || (p)->ki_stat == SIDL)
-#define is_stopped(p) \
+# define is_stopped(p) \
 	((p)->ki_stat == SSTOP || (p)->ki_stat == SZOMB)
+#endif
 
 struct kinfo_proc *
 cmp_procs(struct kinfo_proc *p1, struct kinfo_proc *p2)
@@ -54,6 +65,25 @@ cmp_procs(struct kinfo_proc *p1, struct kinfo_proc *p2)
 	if (!is_stopped(p1) && is_stopped(p2))
 		return (p2);
 
+#ifdef __DragonFly__
+	if (p1->kp_lwp.kl_estcpu > p2->kp_lwp.kl_estcpu)
+		return (p1);
+	if (p1->kp_lwp.kl_estcpu < p2->kp_lwp.kl_estcpu)
+		return (p2);
+
+	if (p1->kp_lwp.kl_slptime < p2->kp_lwp.kl_slptime)
+		return (p1);
+	if (p1->kp_lwp.kl_slptime > p2->kp_lwp.kl_slptime)
+		return (p2);
+
+	if (strcmp(p1->kp_comm, p2->kp_comm) < 0)
+		return (p1);
+	if (strcmp(p1->kp_comm, p2->kp_comm) > 0)
+		return (p2);
+
+	if (p1->kp_pid > p2->kp_pid)
+		return (p1);
+#else
 	if (p1->ki_estcpu > p2->ki_estcpu)
 		return (p1);
 	if (p1->ki_estcpu < p2->ki_estcpu)
@@ -71,6 +101,7 @@ cmp_procs(struct kinfo_proc *p1, struct kinfo_proc *p2)
 
 	if (p1->ki_pid > p2->ki_pid)
 		return (p1);
+#endif
 	return (p2);
 }
 
@@ -108,7 +139,11 @@ retry:
 
 	bestp = NULL;
 	for (i = 0; i < len / sizeof (struct kinfo_proc); i++) {
+#ifdef __DragonFly__
+		if (buf[i].kp_tdev != sb.st_rdev)
+#else
 		if (buf[i].ki_tdev != sb.st_rdev)
+#endif
 			continue;
 		if (bestp == NULL)
 			bestp = &buf[i];
@@ -118,7 +153,11 @@ retry:
 
 	name = NULL;
 	if (bestp != NULL)
+#ifdef __DragonFly__
+		name = strdup(bestp->kp_comm);
+#else
 		name = strdup(bestp->ki_comm);
+#endif
 
 	free(buf);
 	return (name);
